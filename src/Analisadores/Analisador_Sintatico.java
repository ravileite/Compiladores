
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analisadores;

import java_cup.runtime.Symbol;
import java.util.LinkedList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Analisador_Sintatico extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return Simbolos.class;
}

  /** Default constructor. */
  @Deprecated
  public Analisador_Sintatico() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Analisador_Sintatico(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Analisador_Sintatico(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\005\000\002\002\004\000\002\002\005\000\002\062" +
    "\005\000\002\062\002\000\002\017\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\003\000\002\001\002\000\004\002\005\001\002\000" +
    "\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\003\000\004\010\003\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Analisador_Sintatico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Analisador_Sintatico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Analisador_Sintatico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public String resultado = "";
    public static LinkedList<TError> TabelaERSintatico = new  LinkedList<TError>();


    public void syntaxError(Symbol symbol){

        String lexema = symbol.value.toString();
        int linha = symbol.right;
        int coluna = symbol.left;
        
        System.out.println("Erro sint√°tico!");
        System.out.println("\tLexema:   " + lexema);
        System.out.println("\tLinha: " + linha);
        System.out.println("\tColuna: " + coluna);



        TError dados = new TError(lexema, linha, coluna, "Erro Sintatico",  "Caractere nao reconhecido!");
        TabelaERSintatico.add(dados);   
    }

    public void unrecoveredSyntaxError(Symbol symbol) throws java.lang.Exception{
        String lexema = symbol.value.toString();
        int linha = symbol.right;
        int coluna = symbol.left;

        System.out.println("Erro sintatico irrecuperavel!");
        System.out.println("\tLexema:   " + lexema);
        System.out.println("\tLinha: " + linha);
        System.out.println("\tColuna: " + coluna);

        TError dados = new TError(lexema, linha, coluna, "Erro Sintatico",  "Caractere nao reconhecido!");
        TabelaERSintatico.add(dados);
    }
    


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Analisador_Sintatico$actions {


  private final Analisador_Sintatico parser;

  /** Constructor */
  CUP$Analisador_Sintatico$actions(Analisador_Sintatico parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Analisador_Sintatico$do_action_part00000000(
    int                        CUP$Analisador_Sintatico$act_num,
    java_cup.runtime.lr_parser CUP$Analisador_Sintatico$parser,
    java.util.Stack            CUP$Analisador_Sintatico$stack,
    int                        CUP$Analisador_Sintatico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Analisador_Sintatico$result;

      /* select the action based on the action number */
      switch (CUP$Analisador_Sintatico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= compilation_unit EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.elementAt(CUP$Analisador_Sintatico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.elementAt(CUP$Analisador_Sintatico$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Analisador_Sintatico$stack.elementAt(CUP$Analisador_Sintatico$top-1)).value;
		RESULT = start_val;
              CUP$Analisador_Sintatico$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.elementAt(CUP$Analisador_Sintatico$top-1)), ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Analisador_Sintatico$parser.done_parsing();
          return CUP$Analisador_Sintatico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // arglist ::= expression comma expression 
            {
              Object RESULT =null;

              CUP$Analisador_Sintatico$result = parser.getSymbolFactory().newSymbol("arglist",0, ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.elementAt(CUP$Analisador_Sintatico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.peek()), RESULT);
            }
          return CUP$Analisador_Sintatico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // comma_expression_loop ::= comma expression comma_expression_loop 
            {
              Object RESULT =null;

              CUP$Analisador_Sintatico$result = parser.getSymbolFactory().newSymbol("comma_expression_loop",48, ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.elementAt(CUP$Analisador_Sintatico$top-2)), ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.peek()), RESULT);
            }
          return CUP$Analisador_Sintatico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // comma_expression_loop ::= 
            {
              Object RESULT =null;

              CUP$Analisador_Sintatico$result = parser.getSymbolFactory().newSymbol("comma_expression_loop",48, ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.peek()), RESULT);
            }
          return CUP$Analisador_Sintatico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // expression ::= id 
            {
              Object RESULT =null;

              CUP$Analisador_Sintatico$result = parser.getSymbolFactory().newSymbol("expression",13, ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.peek()), ((java_cup.runtime.Symbol)CUP$Analisador_Sintatico$stack.peek()), RESULT);
            }
          return CUP$Analisador_Sintatico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Analisador_Sintatico$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Analisador_Sintatico$do_action(
    int                        CUP$Analisador_Sintatico$act_num,
    java_cup.runtime.lr_parser CUP$Analisador_Sintatico$parser,
    java.util.Stack            CUP$Analisador_Sintatico$stack,
    int                        CUP$Analisador_Sintatico$top)
    throws java.lang.Exception
    {
              return CUP$Analisador_Sintatico$do_action_part00000000(
                               CUP$Analisador_Sintatico$act_num,
                               CUP$Analisador_Sintatico$parser,
                               CUP$Analisador_Sintatico$stack,
                               CUP$Analisador_Sintatico$top);
    }
}

}
